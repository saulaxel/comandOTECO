#!/bin/bash

# Programa para jugar ahorcado
# Figuras con ascii copiadas de:
# https://programaresdivertido.wordpress.com/2014/08/29/programando-un-ahorcado-en-consola-con-java-nivel-medio/

ft -i -g "Ahora vas a jugar al ahorcado"

#####       Instrucciones para quien las necesite       ######
if [ $# -eq 1 ]; then
    if [ $1 == "-i" ]; then
        ft -f -G "\t                   Instrucciones                            "
        ft -G    "\t Bienvenido a una versión para jugar en consola del       \n
                  \t clásico juego del ahorcado.                              \n
                  \t                                                          \n
                  \t Tu misión será adivinar una palabra común del castellano \n
                  \t en un número limitado de intentos. La palabra elegida en \n
                  \t cada ocasión habrá sido despojada de los caracteres      \n
                  \t especiales del español (a excepción de las ñ's) con la   \n
                  \t finalidad de dificultar un poco la adivinación.          \n
                  \t                                                          \n
                  \t En un inicio solo se te mostrarán una serie de           \n
                  \t guiones que te indicarán la longitud de la               \n
                  \t palabra secreta. En base a la longitud de la palabra     \n
                  \t deberás hacer una suposición sobre se e ingresar una     \n
                  \t letra.                                                   \n
                  \t                                                          \n
                  \t Si tu letra ingresada esta en efecto contenida en la     \n
                  \t palabra, esta sustituirá los guiones correspondientes    \n
                  \t a su posición, con lo cual estarás más                   \n
                  \t cerca de adivinar la palabra mientras que en el caso     \n
                  \t contrario perderás una vida.                             \n
                  \t                                                          \n"
        ft -G ""
    fi
fi

#####       Generación de palabra por diccionario (y separación de caracteres)      #####
N=$(($RANDOM%253)) # Número mágico (el diccionario está compuesto de 253 entradas)

i=1
for p in $(cat $1/diccionario.txt); do
    #echo $p" "$i" "$N
    if [ $i -eq $N ]; then
        PALABRA=$p
        #echo $PALABRA
    fi
    let i=$i+1
done

LARGO=${#PALABRA}

for ((x=1; x<=$LARGO; x++)); do
    p[$x]=`expr substr $PALABRA $x 1`
    resp[$x]=0
    #echo ${p[$x]}
done

#####       Entrada espectacular :)     #####
read
entrada $1
read
clear

#####       Ciclo de juego      #####
VIDAS=7
LETRS_RESTNTS=$LARGO

while [ $VIDAS -gt 1 ] && [ $LETRS_RESTNTS -ne 0 ]; do
    ft -b -f "\t\tIntente adivinar la palabra secreta\n"
    let indice=8-$VIDAS
    cat "$1/ahorcado_ascii/mono"$indice".txt"

    for ((x=1; x<=$LARGO; x++)); do
        if [ ${resp[$x]} -eq 0 ]; then
            echo -n " _ "
        else
            echo -n " ${p[$x]} "
        fi
    done
    echo ""

    #echo $PALABRA
    echo -n " Ingrese un caracter:"
    read -n 1 c

    echo ""
    ACIERTO=0
    for ((x=1; x<=$LARGO; x++)); do
        #echo $c" "${p[$x]}
        #read
        if [ "$c" == "${p[$x]}" ]; then
            resp[$x]=1
            #echo $LETRS_RESTNTS
            let LETRS_RESTNTS=$LETRS_RESTNTS-1
            #echo $LETRS_RESTNTS
            let ACIERTO=$ACIERTO+1
        fi
    done

    clear
    if [ $ACIERTO -eq 0 ]; then
        echo "Lo siento, la letra no estA contenida"; 
        let VIDAS=$VIDAS-1
    else
        echo "Una letra menos"
    fi
    ACIERTO=0
done

clear
if [ $LETRS_RESTNTS -eq 0 ]; then
    echo -e "\t\t\t"$(ft -f -r "\t\tEfectivamente, es:")$(ft -v -i " $PALABRA")
    ft -f -r "\t\t\tLa victoria es toda tuya"
    cat $1"/ahorcado_ascii/mono0.txt"
else
    ft -f -Z "\t\t): Suerte para la proxima, la palabra era "
    ft -f -a "\t\t\t\t$PALABRA"
    cat $1"/ahorcado_ascii/mono7.txt"
fi
